version: '3.8'

services:
  nginx:
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./source:/var/www/html:delegated
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./compose/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - laravel

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      PMA_HOST: ${DB_CONNECTION}
      PMA_PORT: ${DB_PORT}
      PMA_ARBITRARY: 1
    restart: always
    depends_on:
      - mysql
    ports:
    - "8081:80"
    volumes:
      - /sessions
    networks:
      - laravel
    links:
      - mysql

  php:
    build:
      context: .
      dockerfile: ./compose/php/Dockerfile
    container_name: php
    volumes:
      - ./source:/var/www/html:delegated
      - ./compose/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    ports:
      - "9000:9000"
    networks:
      - laravel
    environment:
      PHP_IDE_CONFIG: "serverName=Docker_xdebug"
      PHP_XDEBUG_ENABLED: 1
      XDEBUG_CONFIG: "remote_host=10.254.254.254"

  composer:
    build:
      context: .
      dockerfile: ./compose/php/composer/Dockerfile
    container_name: composer
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: ['composer', '--ignore-platform-reqs']

  npm:
    image: node:15.0.1
    container_name: npm
    volumes:
      - ./source:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

#  artisan:
#    build:
#      context: .
#      dockerfile: ./compose/php/Dockerfile
#    container_name: artisan
#    volumes:
#      - ./source:/var/www/html:delegated
#    depends_on:
#      - mysql
#    working_dir: /var/www/html
#    user: laravel
#    entrypoint: ['php', '/var/www/html/artisan']
#    networks:
#      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  dbdata:
    driver: local